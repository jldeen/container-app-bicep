{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.4.1008.15138",
      "templateHash": "13442743926232695487"
    }
  },
  "parameters": {
    "rgName": {
      "type": "string",
      "maxLength": 64,
      "minLength": 4,
      "metadata": {
        "description": "Resource Group Name"
      }
    },
    "location": {
      "type": "string",
      "allowedValues": [
        "eastus",
        "westus",
        "centralus"
      ],
      "metadata": {
        "description": "Location of Azure Resources"
      }
    },
    "name": {
      "type": "string",
      "maxLength": 64,
      "minLength": 4,
      "metadata": {
        "description": "Container App Name"
      }
    },
    "administratorLogin": {
      "type": "secureString",
      "metadata": {
        "description": "Azure Database Admin login"
      }
    },
    "administratorPassword": {
      "type": "string"
    }
  },
  "functions": [],
  "resources": [
    {
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2021-04-01",
      "name": "[parameters('rgName')]",
      "location": "[parameters('location')]"
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-06-01",
      "name": "logAnalyticsWorkspace",
      "resourceGroup": "[parameters('rgName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[parameters('name')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1008.15138",
              "templateHash": "9233389467681148214"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "name": {
              "type": "string"
            }
          },
          "functions": [],
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/workspaces",
              "apiVersion": "2020-03-01-preview",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "properties": {
                "retentionInDays": 30,
                "features": {
                  "searchVersion": 1
                },
                "sku": {
                  "name": "PerGB2018"
                }
              }
            }
          ],
          "outputs": {
            "workspaceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('name'))]"
            },
            "clientId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.OperationalInsights/workspaces', parameters('name'))).customerId]"
            },
            "clientSecret": {
              "type": "string",
              "value": "[listKeys(resourceId('Microsoft.OperationalInsights/workspaces', parameters('name')), '2020-03-01-preview').primarySharedKey]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('rgName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-06-01",
      "name": "containerAppEnv",
      "resourceGroup": "[parameters('rgName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[parameters('name')]"
          },
          "workspaceClientId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('rgName')), 'Microsoft.Resources/deployments', 'logAnalyticsWorkspace'), '2020-06-01').outputs.clientId.value]"
          },
          "workspaceClientSecret": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('rgName')), 'Microsoft.Resources/deployments', 'logAnalyticsWorkspace'), '2020-06-01').outputs.clientSecret.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1008.15138",
              "templateHash": "8934979462652880989"
            }
          },
          "parameters": {
            "name": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "workspaceClientId": {
              "type": "string"
            },
            "workspaceClientSecret": {
              "type": "string"
            }
          },
          "functions": [],
          "resources": [
            {
              "type": "Microsoft.Web/kubeEnvironments",
              "apiVersion": "2021-02-01",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "properties": {
                "type": "managed",
                "internalLoadBalancerEnabled": false,
                "appLogsConfiguration": {
                  "destination": "log-analytics",
                  "logAnalyticsConfiguration": {
                    "customerId": "[parameters('workspaceClientId')]",
                    "sharedKey": "[parameters('workspaceClientSecret')]"
                  }
                }
              }
            }
          ],
          "outputs": {
            "id": {
              "type": "string",
              "value": "[resourceId('Microsoft.Web/kubeEnvironments', parameters('name'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('rgName')), 'Microsoft.Resources/deployments', 'logAnalyticsWorkspace')]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('rgName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-06-01",
      "name": "database",
      "resourceGroup": "[parameters('rgName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "workspaceId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('rgName')), 'Microsoft.Resources/deployments', 'logAnalyticsWorkspace'), '2020-06-01').outputs.workspaceId.value]"
          },
          "mySQLServerSku": {
            "value": "B_Gen5_1"
          },
          "administratorLogin": {
            "value": "[parameters('administratorLogin')]"
          },
          "administratorPassword": {
            "value": "[parameters('administratorPassword')]"
          },
          "mySQLServerName": {
            "value": "ghost-sql-server"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1008.15138",
              "templateHash": "6680778202759526962"
            }
          },
          "parameters": {
            "mySQLServerName": {
              "type": "string",
              "maxLength": 63,
              "minLength": 3
            },
            "mySQLServerSku": {
              "type": "string",
              "allowedValues": [
                "B_Gen5_1",
                "B_Gen5_2"
              ]
            },
            "administratorLogin": {
              "type": "string",
              "minLength": 1,
              "metadata": {
                "description": "Database administrator login name"
              }
            },
            "administratorPassword": {
              "type": "secureString",
              "maxLength": 128,
              "minLength": 8,
              "metadata": {
                "description": "Database administrator password"
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Location to deploy the resources"
              }
            },
            "workspaceId": {
              "type": "string",
              "metadata": {
                "description": "Log Analytics workspace id to use for diagnostics settings"
              }
            }
          },
          "functions": [],
          "resources": [
            {
              "type": "Microsoft.DBforMySQL/servers",
              "apiVersion": "2017-12-01",
              "name": "[parameters('mySQLServerName')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "[parameters('mySQLServerSku')]",
                "tier": "Basic"
              },
              "properties": {
                "createMode": "Default",
                "version": "5.7",
                "administratorLogin": "[parameters('administratorLogin')]",
                "administratorLoginPassword": "[parameters('administratorPassword')]",
                "sslEnforcement": "Enabled",
                "minimalTlsVersion": "TLS1_2"
              }
            },
            {
              "type": "Microsoft.DBforMySQL/servers/firewallRules",
              "apiVersion": "2017-12-01",
              "name": "[format('{0}/{1}', parameters('mySQLServerName'), 'AllowAzureIPs')]",
              "properties": {
                "startIpAddress": "0.0.0.0",
                "endIpAddress": "0.0.0.0"
              },
              "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('mySQLServerName'))]"
              ]
            },
            {
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2021-05-01-preview",
              "scope": "[format('Microsoft.DBforMySQL/servers/{0}', parameters('mySQLServerName'))]",
              "name": "MySQLServerDiagnostics",
              "properties": {
                "workspaceId": "[parameters('workspaceId')]",
                "metrics": [
                  {
                    "category": "AllMetrics",
                    "enabled": true
                  }
                ],
                "logs": [
                  {
                    "category": "MySqlSlowLogs",
                    "enabled": true
                  },
                  {
                    "category": "MySqlAuditLogs",
                    "enabled": true
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers', parameters('mySQLServerName'))]"
              ]
            }
          ],
          "outputs": {
            "name": {
              "type": "string",
              "value": "[parameters('mySQLServerName')]"
            },
            "fqdn": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.DBforMySQL/servers', parameters('mySQLServerName'))).fullyQualifiedDomainName]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('rgName')), 'Microsoft.Resources/deployments', 'logAnalyticsWorkspace')]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('rgName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-06-01",
      "name": "ghost",
      "resourceGroup": "[parameters('rgName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "ghost"
          },
          "containerImage": {
            "value": "jldeen/ghost:latest"
          },
          "containerAppEnvironmentId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('rgName')), 'Microsoft.Resources/deployments', 'containerAppEnv'), '2020-06-01').outputs.id.value]"
          },
          "containerPort": {
            "value": 2368
          },
          "useExternalIngress": {
            "value": true
          },
          "transportMethod": {
            "value": "http"
          },
          "environmentVariables": {
            "value": [
              {
                "name": "database__client",
                "value": "mysql"
              },
              {
                "name": "database__connection__host",
                "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('rgName')), 'Microsoft.Resources/deployments', 'database'), '2020-06-01').outputs.fqdn.value]"
              },
              {
                "name": "database__connection__user",
                "value": "[format('{0}@{1}', parameters('administratorLogin'), reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('rgName')), 'Microsoft.Resources/deployments', 'database'), '2020-06-01').outputs.name.value)]"
              },
              {
                "name": "database__connection__password",
                "value": "[parameters('administratorPassword')]"
              },
              {
                "name": "database__connection__database",
                "value": "ghost"
              },
              {
                "name": "url",
                "value": "[format('http://{0}-fd.azurefd.net', parameters('name'))]"
              },
              {
                "name": "database__connection__ssl",
                "value": "true"
              },
              {
                "name": "database__connection__ssl_minVersion",
                "value": "TLSv1.2"
              }
            ]
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1008.15138",
              "templateHash": "17341899929223101997"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Container app location; default is Resource Group location"
              }
            },
            "name": {
              "type": "string"
            },
            "containerAppEnvironmentId": {
              "type": "string"
            },
            "containerImage": {
              "type": "string",
              "metadata": {
                "description": "Set image for your container app to use"
              }
            },
            "useExternalIngress": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Set whether you want your ingress visible externally, or internally within a VNET"
              }
            },
            "containerPort": {
              "type": "int",
              "metadata": {
                "description": "The port your container listens to for incoming requests. Your application ingress endpoint is always exposed on port 443"
              }
            },
            "transportMethod": {
              "type": "string",
              "defaultValue": "auto",
              "allowedValues": [
                "auto",
                "http",
                "http2"
              ],
              "metadata": {
                "description": "Transport type for Ingress"
              }
            },
            "environmentVariables": {
              "type": "array",
              "defaultValue": []
            }
          },
          "functions": [],
          "resources": [
            {
              "type": "Microsoft.Web/containerApps",
              "apiVersion": "2021-03-01",
              "name": "[parameters('name')]",
              "kind": "containerapp",
              "location": "[parameters('location')]",
              "properties": {
                "kubeEnvironmentId": "[parameters('containerAppEnvironmentId')]",
                "configuration": {
                  "secrets": [],
                  "registries": [],
                  "ingress": {
                    "external": "[parameters('useExternalIngress')]",
                    "targetPort": "[parameters('containerPort')]",
                    "transport": "[parameters('transportMethod')]"
                  }
                },
                "template": {
                  "containers": [
                    {
                      "image": "[parameters('containerImage')]",
                      "name": "[parameters('name')]",
                      "env": "[parameters('environmentVariables')]"
                    }
                  ],
                  "scale": {
                    "minReplicas": 0
                  }
                }
              }
            }
          ],
          "outputs": {
            "name": {
              "type": "string",
              "value": "[parameters('name')]"
            },
            "fqdn": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Web/containerApps', parameters('name'))).configuration.ingress.fqdn]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('rgName')), 'Microsoft.Resources/deployments', 'containerAppEnv')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('rgName')), 'Microsoft.Resources/deployments', 'database')]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('rgName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-06-01",
      "name": "frontdoor",
      "resourceGroup": "[parameters('rgName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "containerAppName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('rgName')), 'Microsoft.Resources/deployments', 'ghost'), '2020-06-01').outputs.name.value]"
          },
          "fdName": {
            "value": "[format('{0}-fd', parameters('name'))]"
          },
          "logAnalyticsWorkspaceId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('rgName')), 'Microsoft.Resources/deployments', 'logAnalyticsWorkspace'), '2020-06-01').outputs.workspaceId.value]"
          },
          "wafPolicyName": {
            "value": "[format('{0}waf', parameters('name'))]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1008.15138",
              "templateHash": "16126734532270973611"
            }
          },
          "parameters": {
            "fdName": {
              "type": "string",
              "maxLength": 64,
              "minLength": 5
            },
            "wafPolicyName": {
              "type": "string",
              "maxLength": 128,
              "minLength": 1
            },
            "logAnalyticsWorkspaceId": {
              "type": "string",
              "metadata": {
                "description": "Log Analytics workspace id to use for diagnostics settings"
              }
            },
            "containerAppName": {
              "type": "string",
              "metadata": {
                "description": "Container App Name"
              }
            }
          },
          "functions": [],
          "variables": {
            "backendPool1Name": "[format('{0}-backendPool1', parameters('fdName'))]",
            "healthProbe1Name": "[format('{0}-healthProbe1', parameters('fdName'))]",
            "frontendEndpoint1Name": "[format('{0}-frontendEndpoint1', parameters('fdName'))]",
            "loadBalancing1Name": "[format('{0}-loadBalancing1', parameters('fdName'))]",
            "routingRule1Name": "[format('{0}-routingRule1', parameters('fdName'))]",
            "frontendEndpoint1hostName": "[format('{0}.azurefd.net', parameters('fdName'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Network/frontDoors",
              "apiVersion": "2020-05-01",
              "name": "[parameters('fdName')]",
              "location": "global",
              "properties": {
                "routingRules": [
                  {
                    "name": "[variables('routingRule1Name')]",
                    "properties": {
                      "frontendEndpoints": [
                        {
                          "id": "[resourceId('Microsoft.Network/frontDoors/frontendEndpoints', parameters('fdName'), variables('frontendEndpoint1Name'))]"
                        }
                      ],
                      "acceptedProtocols": [
                        "Https"
                      ],
                      "patternsToMatch": [
                        "/*"
                      ],
                      "routeConfiguration": {
                        "@odata.type": "#Microsoft.Azure.FrontDoor.Models.FrontdoorForwardingConfiguration",
                        "forwardingProtocol": "HttpsOnly",
                        "backendPool": {
                          "id": "[resourceId('Microsoft.Network/frontDoors/backendPools', parameters('fdName'), variables('backendPool1Name'))]"
                        },
                        "cacheConfiguration": {
                          "queryParameterStripDirective": "StripNone",
                          "dynamicCompression": "Enabled"
                        }
                      },
                      "enabledState": "Enabled"
                    }
                  }
                ],
                "healthProbeSettings": [
                  {
                    "name": "[variables('healthProbe1Name')]",
                    "properties": {
                      "path": "/",
                      "protocol": "Https",
                      "intervalInSeconds": 120
                    }
                  }
                ],
                "loadBalancingSettings": [
                  {
                    "name": "[variables('loadBalancing1Name')]",
                    "properties": {
                      "sampleSize": 4,
                      "successfulSamplesRequired": 2
                    }
                  }
                ],
                "backendPools": [
                  {
                    "name": "[variables('backendPool1Name')]",
                    "properties": {
                      "backends": [
                        {
                          "address": "[reference(resourceId('Microsoft.Web/containerApps', parameters('containerAppName')), '2021-03-01').configuration.ingress.fqdn]",
                          "backendHostHeader": "[reference(resourceId('Microsoft.Web/containerApps', parameters('containerAppName')), '2021-03-01').configuration.ingress.fqdn]",
                          "httpPort": 80,
                          "httpsPort": 443,
                          "weight": 50,
                          "priority": 1,
                          "enabledState": "Enabled"
                        }
                      ],
                      "loadBalancingSettings": {
                        "id": "[resourceId('Microsoft.Network/frontDoors/loadBalancingSettings', parameters('fdName'), variables('loadBalancing1Name'))]"
                      },
                      "healthProbeSettings": {
                        "id": "[resourceId('Microsoft.Network/frontDoors/healthProbeSettings', parameters('fdName'), variables('healthProbe1Name'))]"
                      }
                    }
                  }
                ],
                "frontendEndpoints": [
                  {
                    "name": "[variables('frontendEndpoint1Name')]",
                    "properties": {
                      "hostName": "[variables('frontendEndpoint1hostName')]",
                      "sessionAffinityEnabledState": "Disabled",
                      "webApplicationFirewallPolicyLink": {
                        "id": "[resourceId('Microsoft.Network/FrontDoorWebApplicationFirewallPolicies', parameters('wafPolicyName'))]"
                      }
                    }
                  }
                ],
                "enabledState": "Enabled"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/FrontDoorWebApplicationFirewallPolicies', parameters('wafPolicyName'))]"
              ]
            },
            {
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2021-05-01-preview",
              "scope": "[format('Microsoft.Network/frontDoors/{0}', parameters('fdName'))]",
              "name": "FrontDoorDiagnostics",
              "properties": {
                "workspaceId": "[parameters('logAnalyticsWorkspaceId')]",
                "metrics": [
                  {
                    "category": "AllMetrics",
                    "enabled": true
                  }
                ],
                "logs": [
                  {
                    "category": "FrontdoorAccessLog",
                    "enabled": true
                  },
                  {
                    "category": "FrontdoorWebApplicationFirewallLog",
                    "enabled": true
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/frontDoors', parameters('fdName'))]"
              ]
            },
            {
              "type": "Microsoft.Network/FrontDoorWebApplicationFirewallPolicies",
              "apiVersion": "2020-11-01",
              "name": "[parameters('wafPolicyName')]",
              "location": "global",
              "properties": {
                "policySettings": {
                  "mode": "Prevention",
                  "enabledState": "Enabled"
                },
                "managedRules": {
                  "managedRuleSets": [
                    {
                      "ruleSetType": "Microsoft_DefaultRuleSet",
                      "ruleSetVersion": "1.1"
                    }
                  ]
                }
              }
            }
          ],
          "outputs": {
            "hostname": {
              "type": "string",
              "value": "[variables('frontendEndpoint1hostName')]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('rgName')), 'Microsoft.Resources/deployments', 'ghost')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('rgName')), 'Microsoft.Resources/deployments', 'logAnalyticsWorkspace')]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('rgName'))]"
      ]
    }
  ],
  "outputs": {
    "frontdoorFQDN": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('rgName')), 'Microsoft.Resources/deployments', 'frontdoor'), '2020-06-01').outputs.hostname.value]"
    },
    "ghostFQDN": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('rgName')), 'Microsoft.Resources/deployments', 'ghost'), '2020-06-01').outputs.fqdn.value]"
    }
  }
}